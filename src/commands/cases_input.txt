### Ejemplo 1: Manejo Básico de Variables y `echo`

export VAR=hello
echo $VAR
unset VAR
echo $VAR

# Resultado Esperado:
# hello
# <línea en blanco>

---

### Ejemplo 2: Uso de `cd`, `pwd` y `env`
pwd
export PATH=$PATH:/new/path
env | grep PATH
cd /tmp
pwd

# Resultado Esperado (aproximado):
# /home/user
# PATH=/usr/bin:/bin:/new/path
# /tmp

---

### Ejemplo 3: Manejo de Redirecciones con `echo`
echo "Hello, World!" > output.txt
env > env_backup.txt
cat output.txt
unset PATH
env

# Resultado Esperado:
# Hello, World!
# <línea en blanco: no se muestra nada para `env` tras unset PATH>

---

### Ejemplo 4: Uso Combinado con Pipes
export VAR1=foo
export VAR2=bar
env | grep VAR
echo $VAR1 | grep foo

# Resultado Esperado:
# VAR1=foo
# VAR2=bar
# foo

---

### Ejemplo 5: Casos con Errores y Manejo de Entradas
cd nonexistent_dir
export 123INVALID=hello
unset
echo $HOME

# Resultado Esperado:
# bash: cd: nonexistent_dir: No such file or directory
# bash: export: `123INVALID=hello': not a valid identifier
# bash: unset: not enough arguments
# /home/user


int is_cmd_external(t_mini *mini, t_tokens *token)
{
	char *cmd_path;
	t_list *tokens_list;
	t_tokens *curr_token;

	// Validar que mini y sus tokens existan
	if (!mini || !mini->token)
		return FALSE;

	tokens_list = mini->token;
	if (!tokens_list || !tokens_list->content)
		return FALSE;

	curr_token = (t_tokens *)tokens_list->content;

	// Verificar que las rutas estén disponibles
	if (!mini->exec || !mini->exec->paths)
		return FALSE;

	// Buscar el path del comando
	cmd_path = get_cmd_path(token, mini->exec->paths);

	if (cmd_path != NULL)
	{
		printf("--------cmd_path: [%s]\n", cmd_path);  // Imprimir el comando encontrado
		free(cmd_path);  // Liberar memoria asignada por get_cmd_path
		return 1;  // Es un comando externo
	}
	else
	{
		printf("--------cmd_path: [NULL]\n");
		return 0;  // No es un comando externo
	}
}